#!/bin/bash

# Don't run me as root!
if [[ `id --user` == "0" ]]; then
    echo "Do not run jenkins as root."
    exit 1
fi

# Use virtualenv with Django-1.6 installed.
source /home/tbp/virtualenv/django16/bin/activate

# Clean up compiled python files
find . -type f -name "*.py[co]" -delete

# Go to directory of the script
pushd $(dirname $0) > /dev/null

# The following conditions must be true for jenkins to return true:
#   1. The tests must pass.
#   2. pylint must be perfect, as evidenced by no lines with ".py" in the report.
#   3. pep8 must be perfect, as evidenced by no lines with ".py" in the report.
# All other lint errors are not taken into consideration for the +/- Verified
# flag. Jenkins will report the other lint errors in pretty graphs though.
python manage.py jenkins \
    --settings=quark.settings.test \
    --pep8-max-line-length=80 \
# Error code should be 0 (no errors)
jenkins_status=$?

# Check if pylint is perfect (error code should not be 0: grep shouldn't find any lines with .py)
grep -q "\.py" reports/pylint.report
pylint_status=$?

# Check if pep8 is perfect (error code should not be 0: grep shouldn't find any lines with .py)
grep -q "\.py" reports/pep8.report
pep8_status=$?

success=$(($jenkins_status != 0 || $pylint_status == 0 || $pep8_status == 0))

if [[ $success == 0 ]]; then
    echo -e "\nEverything looks good!"
else
    if [[ $pylint_status == 0 ]]; then
        echo -e "\nPYLINT VIOLATIONS"
        echo "================================================================"
        # Print until first blank line (the lines that say the errors)
        awk '/^\s*$/{exit}1' reports/pylint.report
    else
        echo -e "\nNo pylint violations."
    fi

    if [[ $pep8_status == 0 ]]; then
        echo -e "\nPEP8 VIOLATIONS"
        echo "================================================================"
        # Print the whole file (all lines say the errors)
        cat reports/pep8.report
    else
        echo -e "\nNo pep8 violations."
    fi

    echo -e "\nPlease fix all errors before doing git review!"
fi

popd > /dev/null
exit $success
